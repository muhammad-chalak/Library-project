/* General Styles */
:root {
    /* Default (Dark) Theme */
    --primary-color: #6C5CE7; /* A deep, rich purple */
    --secondary-color: #A29BFE; /* Lighter purple */
    --accent-color: #FFEAA7; /* Soft yellow for highlights */
    --dark-bg: #2d3436; /* Dark background */
    --light-bg-variant: #24292b; /* Slightly lighter dark for sections */
    --card-bg: #3e484a; /* Darker card background */
    --light-text: #dfe6e9; /* Light text on dark background */
    --gray-text: #b2bec3; /* Muted gray text */
    --white: #ffffff;
    --black: #000000; /* Used for text on light backgrounds */
    --header-bg: rgba(45, 52, 54, 0.9);
    --hero-overlay: rgba(0, 0, 0, 0.6);
    --input-border: #b2bec3;
    --input-bg: #3e484a;
    --read-btn-text: var(--white); /* Text color for read button in dark mode */
    --category-title-text: var(--accent-color); /* Category title in dark mode */
    --hero-h1-color: var(--white); /* New variable for hero h1 color */
    --header-border: 1px solid rgba(255, 255, 255, 0.1); /* New: Header border */

    /* Custom variable for all-books.html header total height */
    --all-books-header-total-height: 190px; /* Default/fallback value */
}

body.light-theme {
    /* Light Theme */
    --primary-color: #007bff; /* Blue */
    --secondary-color: #6c757d; /* Gray */
    --accent-color: #ffc107; /* Yellow - original for the "Start Journey" button */
    --dark-bg: #f8f9fa; /* Light background */
    --light-bg-variant: #ffffff; /* White for sections */
    --card-bg: #fefefe; /* White card background */
    --light-text: #343a40; /* Dark text on light background */
    --gray-text: #6c757d; /* Muted gray text */
    --white: #ffffff; /* For primary buttons in light mode */
    --black: #000000; /* For elements that need to contrast with light background */
    --header-bg: rgba(255, 255, 255, 0.95);
    --hero-overlay: rgba(255, 255, 255, 0.7);
    --input-border: #ced4da;
    --input-bg: #e9ecef;
    --read-btn-text: var(--white); /* Still white for readability on blue button */
    --category-title-text: var(--black); /* Category title in light mode - changed to black */
    --hero-h1-color: var(--black); /* Changed to black for light theme */
    --header-border: 1px solid rgba(0, 0, 0, 0.1); /* New: Header border for light theme */
    --splash-book-color: var(--black); /* NEW: Define splash book color for light theme */
}


* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Merriweather', serif; /* Body font */
    background-color: var(--dark-bg);
    color: var(--light-text);
    direction: rtl; /* Set overall direction to right-to-left */
    line-height: 1.6;
    transition: background-color 0.5s ease, color 0.5s ease; /* Smooth theme transition */
}

.container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
}

/* Typography */
h1, h2, h3, h4, h5, h6 {
    font-family: 'Playfair Display', serif; /* Headings font */
    color: var(--light-text); /* Use light-text for headings to adapt to theme */
    margin-bottom: 15px;
}

h1 { font-size: 3.5rem; }
h2 { font-size: 2.8rem; }
h3 { font-size: 2.2rem; }
h4 { font-size: 1.8rem; }

a {
    text-decoration: none;
    color: var(--secondary-color);
    transition: color 0.3s ease;
}

a:hover {
    color: var(--primary-color);
}

.section-title {
    text-align: center;
    margin-bottom: 60px;
    font-size: 3rem;
    position: relative;
    padding-bottom: 15px;
    color: var(--light-text);
}

.section-title::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    width: 80px;
    height: 4px;
    background-color: var(--accent-color);
    border-radius: 2px;
}

/* Buttons */
.btn {
    display: inline-block;
    padding: 12px 25px;
    border-radius: 5px;
    font-weight: bold;
    text-align: center;
    cursor: pointer;
    transition: all 0.3s ease;
    border: none;
    font-family: 'Merriweather', serif;
}

/* New small button style */
.btn.btn-sm {
    padding: 8px 15px; /* Smaller padding */
    font-size: 0.9rem; /* Smaller font size */
}


.primary-btn {
    background-color: var(--primary-color);
    color: var(--white);
}

.primary-btn:hover {
    background-color: var(--secondary-color);
    transform: translateY(-3px);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
}

.secondary-btn {
    background-color: var(--accent-color); /* Kept accent for secondary button background */
    color: var(--black); /* Changed to black for better contrast in light mode */
}

.secondary-btn:hover {
    background-color: var(--white);
    color: var(--black); /* Ensure text color changes for light theme */
    transform: translateY(-3px);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
}

/* Splash Screen */
.splash-screen {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, var(--dark-bg) 0%, #3e484a 100%);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 9999;
    transition: opacity 0.8s ease-in-out, visibility 0.8s ease-in-out;
}

body.light-theme .splash-screen {
    background: var(--white); /* Forces the background to be plain white in light theme */
}

.splash-screen.hidden {
    opacity: 0;
    visibility: hidden;
    pointer-events: none; /* Make it unclickable */
}

.book-animation {
    font-size: 10rem;
    color: var(--accent-color); /* This will keep it yellow/accent color from the current theme */
    animation: openBook 3s ease-in-out infinite alternate, glow 1.5s infinite alternate;
    position: relative;
}

body.light-theme .book-animation {
    color: var(--splash-book-color); /* Use the new variable for light theme */
}

.book-animation i {
    text-shadow: 0 0 15px var(--accent-color); /* Keeps the glow based on accent color */
}

body.light-theme .book-animation i {
    text-shadow: 0 0 15px var(--splash-book-color); /* Use the new variable for light theme glow */
}

@keyframes openBook {
    0% { transform: scale(0.8) rotateY(0deg); }
    50% { transform: scale(1.1) rotateY(20deg); }
    100% { transform: scale(0.8) rotateY(0deg); }
}

@keyframes glow {
    0% { filter: brightness(1); }
    100% { filter: brightness(1.5); }
}

/* Main Content Toggle */
.main-content.hidden {
    display: none;
}

/* Header */
.header {
    background-color: var(--header-bg); /* Use theme variable */
    padding: 20px 0;
    position: fixed; /* Changed to fixed for scrolling behavior */
    top: 0;
    width: 100%;
    z-index: 1000;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
    transition: top 0.3s ease-out, background-color 0.5s ease; /* Smooth transition for hide/show and theme */
    border-bottom: var(--header-border); /* Added border to the main header */
}

.header.hidden-header {
    top: -100px; /* Adjust based on header height */
}


.header .container {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.logo a {
    font-family: 'Playfair Display', serif;
    font-size: 2.5rem;
    font-weight: bold;
    color: var(--light-text); /* Use light-text for logo */
}

/* Hamburger Menu */
.hamburger-menu {
    display: none; /* Hidden by default on large screens */
    background: none;
    border: none;
    color: var(--light-text);
    font-size: 1.8rem;
    cursor: pointer;
    padding: 10px;
}

.navbar ul {
    list-style: none;
    display: flex;
}

.navbar ul li {
    margin-right: 30px; /* Adjust for RTL */
    position: relative; /* For settings dropdown */
}

.navbar ul li:last-child {
    margin-right: 0;
}

.navbar a {
    color: var(--light-text);
    font-size: 1.1rem;
    font-weight: 600;
    padding: 5px 0;
    position: relative;
}

.navbar a::after {
    content: '';
    position: absolute;
    bottom: 0;
    right: 0; /* Adjust for RTL */
    width: 0;
    height: 2px;
    background-color: var(--accent-color);
    transition: width 0.3s ease;
}

.navbar a:hover::after {
    width: 100%;
    left: 0; /* Adjust for RTL */
}

/* Settings Dropdown */
.settings-menu-item {
    position: relative;
}

.settings-dropdown {
    position: absolute;
    top: calc(100% + 10px); /* Position below the settings link */
    left: 0; /* Adjust for RTL */
    background-color: var(--header-bg);
    border-radius: 5px;
    box-shadow: 0 4px 15px rgba(0,0,0,0.3);
    padding: 10px;
    min-width: 200px;
    opacity: 0;
    visibility: hidden;
    transform: translateY(-10px);
    transition: opacity 0.3s ease, transform 0.3s ease, visibility 0.3s ease;
    z-index: 1050; /* Above navbar */
    display: flex;
    flex-direction: column;
    border-bottom: var(--header-border); /* Added border to dropdown */
}

.settings-dropdown.show {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
}

.settings-dropdown .theme-toggle {
    width: 100%;
    justify-content: center;
    display: flex;
    gap: 10px;
    padding: 10px 15px;
    background-color: var(--primary-color);
    color: var(--white);
}
.settings-dropdown .theme-toggle:hover {
    background-color: var(--secondary-color);
    color: var(--white);
}

/* Search Bar in Header (for index.html) */
.search-bar-header {
    display: flex;
    border: 1px solid var(--input-border); /* Use theme variable */
    border-radius: 5px;
    overflow: hidden;
}

.search-bar-header input {
    background-color: var(--input-bg); /* Use theme variable */
    border: none;
    padding: 8px 15px;
    color: var(--light-text);
    outline: none;
    width: 200px;
    text-align: right; /* Ensure text direction in input */
}

.search-bar-header input::placeholder {
    color: var(--gray-text);
}

.search-bar-header button {
    background-color: var(--primary-color);
    border: none;
    color: var(--white);
    padding: 8px 12px;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

.search-bar-header button:hover {
    background-color: var(--secondary-color);
}

/* Hero Section */
.hero-section {
    background: url('https://source.unsplash.com/1600x900/?library,bookshelf') no-repeat center center/cover;
    height: 70vh;
    display: flex;
    align-items: center;
    text-align: center;
    position: relative;
    color: var(--white);
    padding-top: 100px; /* To account for fixed header */
}

.hero-section::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: var(--hero-overlay); /* Use theme variable */
}

.hero-content {
    position: relative;
    z-index: 1;
    max-width: 800px;
    margin: 0 auto;
}

.hero-content h1 {
    font-size: 4.5rem;
    margin-bottom: 20px;
    color: var(--hero-h1-color); /* Use the new theme variable here */
    text-shadow: none; /* Remove text-shadow for simplicity */
}

.hero-content p {
    font-size: 1.5rem;
    margin-bottom: 40px;
    color: var(--gray-text);
}

.hero-content .primary-btn.scroll-to-categories {
    background-color: var(--accent-color); /* Button color changed to accent */
    color: var(--black); /* Text color changed to black for contrast */
}

.hero-content .primary-btn.scroll-to-categories:hover {
    background-color: var(--white); /* Hover state */
    color: var(--black);
}

/* Categories Section */
.categories-section {
    padding: 80px 0;
    background-color: var(--light-bg-variant); /* Use theme variable */
    min-height: 100vh; /* Ensure it takes up full height for scroll */
}

.category-block {
    margin-bottom: 80px;
    background-color: var(--card-bg); /* Use theme variable */
    padding: 40px;
    border-radius: 10px;
    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.4);
    transition: background-color 0.5s ease; /* Smooth theme transition */
}

.category-title {
    font-size: 2.5rem;
    color: var(--category-title-text); /* Uses theme variable for category titles */
    text-align: center;
    margin-bottom: 40px;
    position: relative;
    padding-bottom: 10px;
}

.category-title::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    width: 60px;
    height: 3px;
    background-color: var(--primary-color);
    border-radius: 2px;
}

.book-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr)); /* One book per row on small screens, adjusts for larger */
    gap: 30px;
    margin-bottom: 40px;
}

/* Book Card */
.book-card {
    background-color: var(--card-bg); /* Use theme variable */
    border-radius: 10px;
    overflow: hidden;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
    transition: transform 0.3s ease, box-shadow 0 0.3s ease, background-color 0.5s ease;
    display: flex; /* For vertical layout within card */
    flex-direction: column;
    align-items: center; /* Center content horizontally */
    text-align: center; /* Center text */
    padding-bottom: 20px; /* Space for buttons */
}

.book-card:hover {
    transform: translateY(-8px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.4);
}

.book-card img {
    width: 100%;
    height: auto; /* Fixed height for book cover */
    object-fit: cover;
    border-bottom: 3px solid var(--primary-color);
}

.book-info {
    padding: 20px;
    flex-grow: 1; /* Allow info to take up available space */
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}

.book-info h4 {
    font-size: 1.6rem;
    color: var(--light-text); /* Use theme variable */
    margin-bottom: 10px;
    line-height: 1.3;
}

.book-info p {
    font-size: 1rem;
    color: var(--gray-text);
    margin-bottom: 15px;
}

.book-actions {
    display: flex;
    justify-content: center; /* Center single button */
    width: 100%;
    padding: 0 20px; /* Ensure buttons are aligned with card edges */
    margin-top: auto; /* Push actions to the bottom */
}

.book-actions .btn.read-btn {
    display: inline-block; /* Add this to make <a> act like a block for padding */
    flex: none; /* Do not stretch the button */
    width: auto;
    font-size: 0.95rem;
    padding: 10px 20px; /* Adjust padding for single button */
    background-color: var(--primary-color); /* Read button uses primary color */
    color: var(--read-btn-text); /* Text color for read button */
    text-decoration: none; /* Remove underline from the link */
    border-radius: 5px; /* Add border-radius back */
    font-weight: bold; /* Keep font bold */
    text-align: center; /* Center text */
}
.book-actions .btn.read-btn:hover {
    background-color: var(--secondary-color);
    transform: translateY(-3px); /* Keep hover effect */
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3); /* Keep hover effect */
}


.more-btn-container {
    text-align: center;
    margin-top: 50px;
}

/* Contact Section */
.contact-section {
    padding: 80px 0;
    background-color: var(--dark-bg); /* Use theme variable */
    text-align: center;
    transition: background-color 0.5s ease; /* Smooth theme transition */
}

.contact-section p {
    font-size: 1.2rem;
    color: var(--gray-text);
    margin-bottom: 40px;
}

.contact-form {
    max-width: 600px;
    margin: 0 auto;
    display: flex;
    flex-direction: column;
    gap: 20px;
}

.contact-form input,
.contact-form textarea {
    background-color: var(--input-bg); /* Use theme variable */
    border: 1px solid var(--input-border); /* Use theme variable */
    border-radius: 5px;
    padding: 15px;
    color: var(--light-text);
    font-size: 1rem;
    outline: none;
    text-align: right; /* Ensure text direction in input */
    transition: background-color 0.5s ease, border-color 0.5s ease;
}

.contact-form input::placeholder,
.contact-form textarea::placeholder {
    color: var(--gray-text);
}

.contact-form button {
    align-self: center;
    width: 200px;
}

/* Footer */
.footer {
    background-color: var(--black); /* Use theme variable */
    color: var(--gray-text);
    padding: 40px 0;
    text-align: center;
    border-top: 5px solid var(--primary-color);
    transition: background-color 0.5s ease; /* Smooth theme transition */
}

.footer p {
    margin-bottom: 20px;
    font-size: 1rem;
}

.social-links a {
    color: var(--gray-text);
    font-size: 1.5rem;
    margin: 0 10px;
}

.social-links a:hover {
    color: var(--accent-color);
}

/* Scroll to Top Button */
.scroll-to-top {
    position: fixed;
    bottom: 30px;
    right: 30px;
    background-color: var(--primary-color);
    color: var(--white);
    width: 50px;
    height: 50px;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 1.8rem;
    cursor: pointer;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.4);
    transition: background-color 0.3s ease, transform 0.3s ease, opacity 0.3s ease, visibility 0.3s ease;
    z-index: 1100;
    opacity: 0; /* Hidden by default */
    visibility: hidden;
}

.scroll-to-top.show {
    opacity: 1;
    visibility: visible;
}

.scroll-to-top:hover {
    background-color: var(--secondary-color);
    transform: translateY(-5px);
}

/* Styles for all-books.html header (Modified) */
.header.all-books-fixed-header {
    position: fixed;
    top: 0;
    width: 100%;
    background-color: var(--header-bg);
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
    z-index: 1000;
    padding: 0; /* Remove default padding, will be handled by children */
    /* transition: top 0.3s ease-out, background-color 0.5s ease; */
    /* REMOVED: Specific transition for 'top' here to let JS handle it dynamically */
    transition: background-color 0.5s ease; /* Only transition background for theme changes */
    border-bottom: none; /* Remove border from the main fixed header, as it's added to sub-elements */
}

/* Add transition for 'top' to the class that will be added by JS */
.header.all-books-fixed-header {
    transition: top 0.3s ease-out, background-color 0.5s ease; /* Keep transition for smooth hide/show */
}

.all-books-fixed-header.hidden-header {
    /* Use the CSS variable from JS for dynamic hiding */
    top: calc(-1 * var(--all-books-header-total-height));
    /* Make sure this value is correctly calculated and applied by JS */
}

.all-books-header-content {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 15px 20px; /* Add padding here */
    border-bottom: var(--header-border); /* Add border here */
}

.all-books-header-content .page-title {
    flex-grow: 1;
    text-align: center;
    margin-bottom: 0;
    font-size: 2.2rem;
    color: var(--light-text);
}

.all-books-header-content .back-button {
    flex-shrink: 0;
    margin-right: 20px; /* Space between title and button */
}

.all-books-header-content .back-button .btn {
    padding: 8px 15px;
    font-size: 0.95rem;
    display: flex;
    align-items: center;
    gap: 8px;
    border: 1px solid var(--primary-color); /* A subtle border */
}

.all-books-header-content .back-button .btn i {
    transform: rotate(180deg); /* Flip arrow for RTL back button */
    font-size: 1.1rem;
}

/* Search bar for all-books.html (Moved below title and back button) */
.all-books-search-container {
    padding: 15px 20px; /* Padding for the search bar container */
    background-color: var(--header-bg); /* Match header background */
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2); /* Subtle shadow */
    border-bottom: var(--header-border); /* Add border here */
}

.all-books-search-bar {
    display: flex; /* Make sure it's always flex by default */
    width: 100%; /* Full width within its container */
    max-width: 600px; /* Limit max width for better aesthetics */
    margin: 0 auto; /* Center the search bar */
    border: 1px solid var(--input-border);
    border-radius: 8px; /* Slightly more rounded */
    background-color: var(--input-bg);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.all-books-search-bar input {
    flex-grow: 1;
    padding: 12px 20px; /* More padding */
    font-size: 1rem;
    border-radius: 8px 0 0 8px; /* Rounded on the right for RTL */
}

.all-books-search-bar button {
    padding: 12px 18px; /* Match input padding */
    font-size: 1.1rem;
    border-radius: 0 8px 8px 0; /* Rounded on the left for RTL */
}

/* Adjust padding-top for the section below the fixed header */
#all-books-section {
    /* Use the CSS variable for dynamic padding */
    padding-top: var(--all-books-header-total-height);
    /* Add a transition for padding-top as well, in case header height changes */
    transition: padding-top 0.3s ease-out;
}


/* Responsive Design */
@media (max-width: 1024px) {
    .navbar {
        display: none; /* Hide regular navbar on large screens */
        position: absolute;
        top: 80px; /* Adjust based on header height */
        right: 0; /* Align to right for RTL */
        background-color: var(--header-bg);
        width: 100%;
        box-shadow: 0 5px 15px rgba(0,0,0,0.3);
        flex-direction: column;
        align-items: center;
        padding: 20px 0;
        transform: translateY(-10px);
        opacity: 0;
        visibility: hidden;
        transition: opacity 0.3s ease, transform 0.3s ease, visibility 0.3s ease;
        border-bottom: var(--header-border); /* Added border to mobile navbar */
    }

    .navbar.active {
        display: flex; /* Show when active */
        transform: translateY(0);
        opacity: 1;
        visibility: visible;
    }

    .navbar ul {
        flex-direction: column;
        align-items: center;
        width: 100%;
    }

    .navbar ul li {
        margin: 10px 0;
        width: 100%;
        text-align: center;
    }

    .navbar a {
        padding: 10px 0;
        display: block;
        border-bottom: 1px solid rgba(255,255,255,0.1); /* Separator for menu items */
    }
    .navbar ul li:last-child a {
        border-bottom: none;
    }

    .navbar a::after {
        left: 50%;
        transform: translateX(-50%);
    }

    .hamburger-menu {
        display: block; /* Show hamburger menu button */
    }

    /* Hide header search bar on smaller screens (for index.html) */
    .search-bar-header {
        display: none;
    }

    .settings-dropdown {
        position: static; /* Adjust position for mobile menu */
        background: none;
        box-shadow: none;
        padding: 10px 0;
        width: 100%;
        opacity: 1; /* Always visible when parent is visible */
        visibility: visible;
        transform: translateY(0);
        transition: none;
        display: none; /* Hidden by default, show with JS */
        border-bottom: var(--header-border); /* Added border for mobile settings dropdown */
    }
    .settings-dropdown.show {
        display: flex;
    }

    h1 { font-size: 3rem; }
    h2 { font-size: 2.4rem; }
    h3 { font-size: 2rem; }
    .hero-content h1 { font-size: 3.5rem; }
    .hero-content p { font-size: 1.3rem; }
    .book-card img { height: 300px; }

    /* all-books.html specific media queries */
    .all-books-fixed-header {
        /* On smaller screens, allow header to hide/show, but ensure it doesn't jump */
        /* top: 0 !important; */ /* Remove this to allow dynamic top hiding */
    }
    .all-books-header-content {
        flex-direction: column; /* Stack items vertically on smaller screens */
        text-align: center;
    }
    .all-books-header-content .page-title {
        order: 1; /* Title first */
        width: 100%;
        font-size: 2rem; /* Smaller title on mobile */
        margin-bottom: 15px;
        margin-right: 0; /* Remove explicit margin-right */
    }
    .all-books-header-content .back-button {
        order: 2; /* Back button below title */
        width: auto;
        margin-bottom: 15px;
        margin-right: 0; /* Remove explicit margin-right */
    }
    .all-books-search-container {
        padding-top: 0; /* Adjust padding */
        padding-bottom: 15px;
    }
    .all-books-search-bar {
        width: 100%; /* Take full width */
        margin-top: 0; /* Remove extra margin from title */
        display: flex !important; /* Make sure it's always visible */
    }
    .all-books-search-bar input {
        width: calc(100% - 60px); /* Adjust input width within search bar, account for button width */
    }
    .all-books-search-bar button {
        width: 60px; /* Fixed button width */
    }
}

@media (max-width: 768px) {
    .header .container {
        flex-direction: row; /* Keep logo and hamburger in one row */
        justify-content: space-between;
    }
    /* Hide header search bar on smaller screens (for index.html) */
    .search-bar-header {
        display: none;
    }
    h1 { font-size: 2.5rem; }
    h2 { font-size: 2rem; }
    h3 { font-size: 1.8rem; }
    .hero-section { height: 60vh; }
    .hero-content h1 { font-size: 2.8rem; }
    .hero-content p { font-size: 1.1rem; }
    .book-card img { height: 250px; }
    .book-actions { flex-direction: row; gap: 10px; } /* Keep as row */
    .scroll-to-top {
        width: 45px;
        height: 45px;
        font-size: 1.5rem;
        bottom: 20px;
        right: 20px;
    }

    /* all-books.html specific */
    .all-books-header-content .page-title {
        font-size: 1.8rem;
    }
    .all-books-header-content .back-button .btn.btn-sm {
        font-size: 0.8rem;
        padding: 8px 12px;
    }
    .all-books-search-bar {
        display: flex !important; /* Make sure it's always visible */
    }
    .all-books-search-bar input {
        padding: 10px 15px;
        font-size: 0.9rem; /* Smaller font size for mobile input */
    }
    .all-books-search-bar button {
        padding: 10px 15px;
        font-size: 1rem;
    }
}

@media (max-width: 480px) {
    h1 { font-size: 2rem; }
    h2 { font-size: 1.8rem; }
    .hero-content h1 { font-size: 2.2rem; }
    .hero-content p { font-size: 1rem; }
    .logo a { font-size: 2rem; }
    .section-title { font-size: 2.2rem; }
    .category-title { font-size: 2rem; }
    .book-info h4 { font-size: 1.4rem; }

    /* all-books.html specific */
    .all-books-header-content .page-title {
        font-size: 1.6rem;
    }
    .all-books-header-content .back-button .btn.btn-sm {
        font-size: 0.8rem;
        padding: 6px 10px;
    }
    .all-books-search-bar {
        display: flex !important; /* Make sure it's always visible */
    }
    .all-books-search-bar input {
        font-size: 0.9rem;
    }
    .all-books-search-bar button {
        font-size: 1rem;
    }
}
